version: '3.8'

services:
  flask:
    build:
      context: .
      dockerfile: dockerfile.flask
    ports:
      - "5000:5000"
    depends_on:
      - kafka
      - mysql
      - zookeeper
    environment:
      - api_url = http://host.docker.internal/api/v1  # Utiliser l'IP de l'h√¥te  
      

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9093:9092"
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1  
      KAFKA_LOG4J_LOGGERS: "kafka.controller=DEBUG,kafka.producer.async.DefaultEventHandler=DEBUG,state.change.logger=DEBUG"
      
    depends_on:
      - zookeeper  
      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - C:\Composer\log4j.properties:/opt/kafka/config/log4j.properties # change the C:\Composer\ using the path of log4j.properties in your machine
      
      
   
  

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    


  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      
    ports:
      - "3307:3306"

  sleek-airflow:
    image: airflow:latest
    volumes:
      - ./airflow:/opt/airflow
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
       
    ports:
      - "8080:8080"
    command: airflow standalone

  